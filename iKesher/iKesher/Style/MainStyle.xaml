<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:iKesher">
    <local:TitalConverter x:Key="TitalConverter"></local:TitalConverter>
    <SolidColorBrush x:Key="DefBackColor" Color="#FF3580BF"></SolidColorBrush>
    <SolidColorBrush x:Key="defaultForeground" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="defaultColorLight" Color="#FF00bfa5"></SolidColorBrush>
    <SolidColorBrush x:Key="defaultColorDark" Color="#FF1B55A0"></SolidColorBrush>
    <SolidColorBrush x:Key="defualtLaneColor" Color="#FF55B0FF"></SolidColorBrush>
    <SolidColorBrush x:Key="OutStandingForegroung" Color="Red"></SolidColorBrush>
    <SolidColorBrush x:Key="WarningForegroung" Color="Orange"></SolidColorBrush>
    <SolidColorBrush x:Key="LaneUnableColor" Color="#F6F6F6"></SolidColorBrush>
    <SolidColorBrush x:Key="LaneAbleColor" Color="#FFFFFF"></SolidColorBrush>
    <SolidColorBrush x:Key="DefIcoColor" Color="CadetBlue"></SolidColorBrush>
    <SolidColorBrush x:Key="defButtonColor" Color="#ffdddddd"></SolidColorBrush>
    <!-- 弹出窗体的样式参数-->
    <SolidColorBrush x:Key="winColorLight" Color="#FFFFFFFF"></SolidColorBrush>
    <SolidColorBrush x:Key="winColorDark" Color="#FFf4f4f4"></SolidColorBrush>
 
    <Style x:Key="defaultHeader" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DefBackColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="10,0"></Setter>
    </Style>
    <Style x:Key="defaultPlusTb" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="false">
                <Setter Property="Opacity"  Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="defaultTb" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="false">
                <Setter Property="Opacity"  Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="defaultMiddle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="false">
                <Setter Property="Opacity"  Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="defaultlitte" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="12"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="false">
                <Setter Property="Opacity"  Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="imgButton" TargetType="Button">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Background="Transparent" Name="PART_Background1" Padding="5,0">
                            <ContentPresenter  Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="0.7" TargetName="PART_Background1"/>
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value="0.4" TargetName="PART_Background1"/>
                            <!--<Setter Property="Background" Value="{StaticResource DefBackColor}" TargetName="bd"></Setter>-->
                        </Trigger>
                        <!-- 控件不可用时按钮形态-->
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="imgBtnMenu" TargetType="Button">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="{TemplateBinding Height}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}" Name="PART_Background1" >
                        <ContentPresenter  Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Opacity" Value="0.7" TargetName="PART_Background1"/>-->
                            <Setter Property="Background" Value="{StaticResource DefBackColor}" TargetName="PART_Background1"></Setter>
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed" Value="true"  >
                            <Setter Property="Opacity" Value="0.3" TargetName="PART_Background1"/>
                            <!--<Setter Property="Background" Value="#FF1B55A0" TargetName="PART_Background1"></Setter>-->
                        </Trigger>

                        <!-- 控件不可用时按钮形态-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="linkBtn" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource DefBackColor}"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="{TemplateBinding Height}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"  Background="Transparent" Name="PART_Background1" >
                        <ContentPresenter  Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="0.7" TargetName="PART_Background1"/>
                            <Setter Property="Foreground" Value="Red" ></Setter>
                            <Setter Property="FontSize" Value="19" ></Setter>
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed" Value="true"  >
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="FontSize" Value="19" ></Setter>
                            <!--<Setter Property="Background" Value="#FF1B55A0" TargetName="PART_Background1"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="imgRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid  Background="{StaticResource DefBackColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="bd" Width="10" Background="Transparent" BorderThickness="0"></Border>
                        <Border Grid.Column="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Background="Transparent" Name="PART_Background1">
                            <ContentPresenter  Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Opacity" Value="0.7" TargetName="PART_Background1"/>-->
                            <Setter Property="Background" Value="{StaticResource defualtLaneColor}" TargetName="bd"></Setter>
                            <Setter Property="Margin" Value="-2,-2,0,0"></Setter>
                            <Setter Property="Opacity" Value="0.8"></Setter>
                            <Setter  TargetName="PART_Background1" Property="Background" Value="{StaticResource defualtLaneColor}"></Setter>
                            <!--<Setter TargetName="PART_Background1" Property="BorderBrush"  Value="{StaticResource defualtLaneColor}"></Setter>
                            <Setter TargetName="PART_Background1" Property="BorderThickness"  Value="1"></Setter>-->
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Opacity" Value="0.2" TargetName="PART_Background1"/>-->
                            <Setter Property="Background" Value="{StaticResource defaultColorDark}" TargetName="bd"></Setter>
                            <Setter  TargetName="PART_Background1" Property="Background" Value="{StaticResource defaultColorDark}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource WarningForegroung}" TargetName="bd"></Setter>
                            <Setter Property="Margin" Value="-2,-2,0,0"></Setter>
                            <Setter Property="Opacity" Value="0.8"></Setter>
                            <Setter TargetName="PART_Background1" Property="Background"  Value="{StaticResource defaultColorDark}"></Setter>
                        </Trigger>
                        <!-- 控件不可用时按钮形态-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="tbTital" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Margin" Value="5,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="ckButton" TargetType="CheckBox">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <TextBlock x:Name="txt" FontSize="30" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.4"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="markTb" TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="WARKTEXT" Text="{TemplateBinding Tag}" VerticalAlignment="Center" Foreground="#7F2F2F2F" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""></Condition>
                                <Condition Property="IsFocused" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WARKTEXT"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="winmode" TargetType="Window">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        x:Name="WindowBorder">
                        <Grid x:Name="LayoutRoot"
          Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_WindowTitleGrid"
                             Grid.Row="0"
                             Height="40"
                             Background="{StaticResource DefBackColor}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Title }" VerticalAlignment="Center" Grid.ColumnSpan="2" TextAlignment="Center" Margin="4,0" FontSize="18" Foreground="White"></TextBlock>
                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <Button ToolTip="{DynamicResource Mini}"  x:Name="btnMiniWindow" Style="{StaticResource imgButton}" WindowChrome.IsHitTestVisibleInChrome="True" Background="{StaticResource DefBackColor}" VerticalAlignment="Stretch" Command="{x:Static SystemCommands.MinimizeWindowCommand}">
                                        <!--<Image Source="/img/mini.png" Stretch="Fill"  Width="25" Height="25"></Image>-->
                                        <TextBlock  x:Name="tbMini" Text="&#xE921;"   FontSize="20"  FontFamily="Segoe MDL2 Assets"  Foreground="White"></TextBlock>
                                    </Button>
                                    <Button ToolTip="{DynamicResource Close}"  Name="btnCloseWindow" Style="{StaticResource imgButton}" WindowChrome.IsHitTestVisibleInChrome="True" Background="{StaticResource DefBackColor}"  VerticalAlignment="Stretch" Command="{x:Static SystemCommands.CloseWindowCommand}">
                                        <TextBlock x:Name="tbClose" Text="&#xE7E8;"   FontSize="22"  FontFamily="Segoe MDL2 Assets" Foreground="White"></TextBlock>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <AdornerDecorator Grid.Row="1" KeyboardNavigation.IsTabStop="False">
                                <ContentPresenter x:Name="MainContentPresenter"
                              KeyboardNavigation.TabNavigation="Cycle" />
                            </AdornerDecorator>
                            <!--<ResizeGrip x:Name="ResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Grid.Row="1"
                    IsTabStop="False"
                    Visibility="Hidden"
                    WindowChrome.ResizeGripDirection="BottomRight" />-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value  >
                <WindowChrome CornerRadius="0"
                      GlassFrameThickness="2"
                      CaptionHeight="40"
                      UseAeroCaptionButtons="False"
                      NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"  Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border BorderBrush="LightGray" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderThickness="1" Background="White"  CornerRadius="2,0,0,2"/>
                <Border Grid.Column="1" Background="White" Margin="0,3"/>
                <Border Grid.Column="2"  Cursor="Hand" Background="{StaticResource DefBackColor}" CornerRadius="0,2,2,0" />
                <!--<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="16,16,10,10" Stretch="Fill" Fill="#2c303c" />-->
                <Path Name="PathFill" Grid.Column="2" Fill="White" Width="8" Height="8" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="CbStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter  HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
                        <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                        <TextBox  Visibility="Hidden"  Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent"  IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <TextBlock x:Name="mark" VerticalAlignment="Center" Foreground="#7F2F2F2F" Text="{TemplateBinding Tag}" Visibility="Collapsed"></TextBlock>
                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup  IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"  MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="White" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
                                <ScrollViewer Margin="4,3,4,3" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="True"></Condition>
                                <Condition Property="Text" Value="" SourceName="PART_EditableTextBox"></Condition>
                                <Condition  Property="IsFocused" Value="False"  SourceName="PART_EditableTextBox"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="mark"></Setter>
                        </MultiTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="false">
                            <Setter Property="Opacity"  Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="toggleCk" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource DefBackColor}"></Setter>
        <Setter Property="Tag" Value="{DynamicResource On}"></Setter>
        <Setter Property="Content" Value="{DynamicResource Off}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10" Height="30" Width="80">
                        <Grid>
                            <Border x:Name="border" Width="28" Height="28" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1 0" Background="White">
                                <Border.RenderTransform>
                                    <TranslateTransform  X="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Margin="19 0" VerticalAlignment="Center" Foreground="White" >
                                <TextBlock.RenderTransform>
                                    <TranslateTransform   X="18"></TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="50" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="28" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="Gray"></Setter>
                            <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:NumberTextBox}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"></Setter>
    </Style>
</ResourceDictionary>